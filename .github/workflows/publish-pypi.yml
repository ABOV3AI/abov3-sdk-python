name: Publish Python Package to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.5)'
        required: true
        type: string
      environment:
        description: 'Publish to test or production PyPI'
        required: true
        type: choice
        options:
          - test
          - production
        default: test

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Update version if manually triggered
      if: github.event_name == 'workflow_dispatch'
      run: |
        sed -i "s/^version = .*/version = \"${{ github.event.inputs.version }}\"/" pyproject.toml
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml
        git commit -m "Update version to ${{ github.event.inputs.version }}" || true

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Publish to TestPyPI
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'test'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*
        echo "Package published to https://test.pypi.org/project/abov3-ai/"

    - name: Publish to PyPI (Production)
      if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
        echo "Package published to https://pypi.org/project/abov3-ai/"

    - name: Create version tag if manually triggered
      if: github.event_name == 'workflow_dispatch'
      run: |
        git tag v${{ github.event.inputs.version }}
        git push origin v${{ github.event.inputs.version }}